{"version":3,"file":"component---src-pages-projects-js-77711052dcd3fbaf6d75.js","mappings":"wMAQMA,EAASC,EAAAA,QAAAA,MAAAA,WAAH,4DAAGA,CAAH,mRAsBNC,EAAUD,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,yFAOb,SAASE,EAAT,GACE,OAD2B,EAATC,MACLC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACf,gBAAC,IAAD,CAAMC,YAAaD,EAAKC,YAAaC,QAASF,EAAKE,QAASC,KAAMH,EAAKI,OAAOD,UAmFlF,UA/EoB,WAClB,IAAME,GAAOC,EAAAA,EAAAA,gBAAe,aA8BtBR,EAAQO,EAAKE,kBAAkBC,MAGrC,GAA0BC,EAAAA,EAAAA,UAAS,CACjCC,aAAcZ,EACda,MAHiB,KACZC,EAAP,KAAcC,EAAd,KA4BA,OACA,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,aACX,8BACE,gBAACpB,EAAD,CACEqB,KAAK,OACL,aAAW,SACXC,YAAY,6BACZC,SA/BoB,SAAAC,GACxB,IAAMP,EAAQO,EAAMC,OAAOC,MAGrBV,GAFOL,EACME,kBAAkBC,OAAS,IACnBa,QAAO,SAAAC,GAChC,MAAuBA,EAAKtB,KAAKC,YAA1Ba,EAAP,EAAOA,MAAOS,EAAd,EAAcA,KAEd,OADgBD,EAAKtB,KAAKE,QAEhBsB,cAAcC,SAASd,EAAMa,gBACrCV,EAAMU,cAAcC,SAASd,EAAMa,gBAClCD,GAAQA,EACNG,KAAK,IACLF,cACAC,SAASd,EAAMa,kBAItBX,EAAS,CACPF,MAAAA,EACAD,aAAAA,OAcA,gBAACd,EAAD,KACE,gBAACC,EAAD,CAAUC,MAAOc,EAAMF","sources":["webpack://gatsby-starter-default/./src/pages/projects.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Card from \"../components/card\"\n\nconst Search = styled.input`\n  background: #2a2e35;\n  opacity: 0.7;\n  padding: 0 2rem;\n  width: 50%;\n  height: 50px;\n  border-radius: 50px;\n  border: none;\n  color: white;\n  font-family: Roboto;\n  transition : 0.2s ease-in;\n  &:focus, &:hover{\n    opacity: 1;\n    box-shadow: none;\n    transition : 0.2s ease-in;\n  }\n\n  @media screen and (max-width: 1080px){\n    width: 90%;\n  }\n`;\n\nconst FlexDiv = styled.div`\n    margin-top: 5%;\n    justify-content: center;\n    display: flex;\n    flex-wrap: wrap;\n    position: relative;\n`\nfunction Projects({ posts }) {\n  return posts.map(({ node }) => (\n    <Card frontmatter={node.frontmatter} excerpt={node.excerpt} slug={node.fields.slug}/>\n  ))\n}\n\nconst ProjectPage = () => {\n  const list = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        filter: { fileAbsolutePath: { regex: \"/.*projects/\" } }\n        sort: { fields: frontmatter___date, order: DESC}\n      ) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              date (formatString: \"MMMM Do, YYYY\")\n              tags\n              featuredImage {\n                childImageSharp {\n                  fluid {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n            excerpt(format: PLAIN)\n          }\n        }\n      }\n    }\n  `)\n\n  const posts = list.allMarkdownRemark.edges;\n\n  const emptyQuery = \"\"\n  const [state, setState] = useState({\n    filteredData: posts,\n    query: emptyQuery,\n  })\n\n  const handleInputChange = event => {\n    const query = event.target.value\n    const data = list\n    const posts = data.allMarkdownRemark.edges || []\n    const filteredData = posts.filter(post => {\n      const {title, tags } = post.node.frontmatter\n      const excerpt = post.node.excerpt;\n      return (\n        excerpt.toLowerCase().includes(query.toLowerCase())||\n        title.toLowerCase().includes(query.toLowerCase()) ||\n        (tags && tags\n          .join(\"\") \n          .toLowerCase()\n          .includes(query.toLowerCase()))\n      )\n    })\n    \n    setState({\n      query,\n      filteredData,\n    })\n  }\n\n  return (\n  <Layout>\n    <SEO title=\"Projects\" />\n    <center>\n      <Search\n        type=\"text\"\n        aria-label=\"Search\"\n        placeholder=\"🔍 Type to filter posts...\"\n        onChange={handleInputChange}\n      />\n      <FlexDiv>\n        <Projects posts={state.filteredData}></Projects>\n      </FlexDiv>\n    </center>\n  </Layout>)\n}\n\nexport default ProjectPage\n"],"names":["Search","styled","FlexDiv","Projects","posts","map","node","frontmatter","excerpt","slug","fields","list","useStaticQuery","allMarkdownRemark","edges","useState","filteredData","query","state","setState","title","type","placeholder","onChange","event","target","value","filter","post","tags","toLowerCase","includes","join"],"sourceRoot":""}